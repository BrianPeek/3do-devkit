#ifndef __STD_NEW
#define __STD_NEW

/***************************************************************************
 *
 * new - declarations for the Standard Library new header
 *
 * $Id: new@#/main/1.7.1/sl1main/sl121main/0  02/21/97 12:04:33  smithey (SL121RA_UNIX)
 *
 ***************************************************************************
 *
 * (c) Copyright 1994-1997 Rogue Wave Software, Inc.
 * ALL RIGHTS RESERVED
 *
 * The software and information contained herein are proprietary to, and
 * comprise valuable trade secrets of, Rogue Wave Software, Inc., which
 * intends to preserve as trade secrets such software and information.
 * This software is furnished pursuant to a written license agreement and
 * may be used, copied, transmitted, and stored only in accordance with
 * the terms of such license and with the inclusion of the above copyright
 * notice.  This software and information or any other copies thereof may
 * not be provided or otherwise made available to any other person.
 *
 * Notwithstanding any other lease or license that may pertain to, or
 * accompany the delivery of, this computer software and information, the
 * rights of the Government regarding its use, reproduction and disclosure
 * are as set forth in Section 52.227-19 of the FARS Computer
 * Software-Restricted Rights clause.
 * 
 * Use, duplication, or disclosure by the Government is subject to
 * restrictions as set forth in subparagraph (c)(1)(ii) of the Rights in
 * Technical Data and Computer Software clause at DFARS 252.227-7013.
 * Contractor/Manufacturer is Rogue Wave Software, Inc.,
 * P.O. Box 2328, Corvallis, Oregon 97339.
 *
 * This computer software and information is distributed with "restricted
 * rights."  Use, duplication or disclosure is subject to restrictions as
 * set forth in NASA FAR SUP 18-52.227-79 (April 1985) "Commercial
 * Computer Software-Restricted Rights (April 1985)."  If the Clause at
 * 18-52.227-74 "Rights in Data General" is specified in the contract,
 * then the "Alternate III" clause applies.
 *
 **************************************************************************/

#include <stdcomp.h>
#include "rw/stddefs.h"
#ifndef RWSTD_HEADER_REQUIRES_HPP
#include <exception>
#else
#include <exception.hpp>
#endif

typedef void (*new_handler) ();

extern new_handler set_new_handler( new_handler new_p );

#ifndef RWSTD_NO_NEW_BRACKETS
extern void *operator new(size_t, void*);
inline void* operator new[] ( size_t, void* ptr)
 { return ptr; }
#else
inline void *operator new(size_t, void* ptr)
{ return ptr; }
#endif

#ifndef RWSTD_NO_NAMESPACE 
namespace std {
#endif

extern const char RWSTDExportFunc(*) __rw_stdexcept_BadAllocException;

#ifndef RWSTD_BAD_ALLOC_DEFINED
#define RWSTD_BAD_ALLOC_DEFINED 1
class RWSTDExport bad_alloc : public RWSTD_exception     
{ 
  public:
    bad_alloc () RWSTD_THROW_SPEC_NULL : RWSTD_exception( )
    { ; }

    virtual ~bad_alloc ()  RWSTD_THROW_SPEC_NULL 
    { ; }

    virtual const char * what () const  RWSTD_THROW_SPEC_NULL
    {
        return __rw_stdexcept_BadAllocException;
    }
};
#endif /*RWSTD_BAD_ALLOC_DEFINED*/

struct nothrow {};

#ifndef RWSTD_NO_NAMESPACE 
} 
#endif

#endif /*__STD_NEW */
