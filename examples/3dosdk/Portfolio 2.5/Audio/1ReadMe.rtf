{\rtf1\mac\deff2 {\fonttbl{\f0\fswiss Chicago;}{\f2\froman New York;}{\f3\fswiss Geneva;}{\f4\fmodern Monaco;}{\f16\fnil Palatino;}{\f20\froman Times;}{\f21\fswiss Helvetica;}{\f22\fmodern Courier;}{\f23\ftech Symbol;}{\f2000\fnil Skia;}
{\f2011\fnil Apple Chancery;}{\f2013\fnil Hoefler Text;}{\f2018\fnil Hoefler Text Ornaments;}{\f2515\fnil MT Extra;}{\f2645\fnil CarolesChunk;}{\f6963\fnil PerfPrintIcons;}{\f6964\fnil PerfPrintGeneva;}{\f6965\fnil Musicfont;}{\f6966\fnil computils;}
{\f6967\fnil Sonata;}{\f15090\fnil Tekton Plus Regular;}}{\colortbl\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;}
{\stylesheet{\f16 \sbasedon222\snext0 Normal;}{\s2 \b\f16\fs28\ul \sbasedon0\snext2 Directory;}{\s3\li360 \b\f16\fs28 \sbasedon0\snext3 Program Name;}{\s4\li720 \f16 \sbasedon0\snext4 Description;}}{\info{\title 1ReadMe.rtf}{\subject Audio examples ReadMe
}{\author John Byrd}}\widowctrl\ftnbj\fracwidth \sectd \sbknone\linemod0\linex0\cols1\endnhere \pard\plain \f16 1ReadMe.rtf/txt\par 
December 13, 1994\par 
Examples:Audio\par 
\par 
This is the ReadMe file for the Audio Examples folder.  It briefly describes each program maintained in the Audio folder.  For more information on a specific program, see the Examples documentation, or see the header for the source code in question.\par 
\par 
{\b About the AIFF Samples folder}\par 
\par 
Many of the examples in the Audio folder require sound samples from the \ldblquote AIFF Samples\rdblquote 
 folder in order to run.  This folder was most recently distributed on the Toolkit 1.5 CD.  To use these samples, it is necessary to copy the AIFF Samples folder from your Toolkit CD to your working /remote folder.  \par 
\par 
First, drag the \ldblquote AIFF Samples\rdblquote  folder to the \ldblquote remote\rdblquote  folder on your hard disk.  Be patient, as the AIFF Samples folder is very large.  Then, rename the copied \ldblquote AIFF Samples\rdblquote  folder to  
\ldblquote aiff\rdblquote  .  To inform the 3DO Debugger about the location of the AIFF samples, type the following line in at the {\f22 3DO->} prompt:\par 
\par 
\pard \li720 {\f22 alias samples /remote/aiff\par 
\par 
}\pard You can now move the audio example executables and support files into the /remote folder, and run them.  Each of the example programs will attempt to load the AIFF samples it needs via the alias \ldblquote $samples\rdblquote .\par 
\par 
To automate this process, insert that line into the AppStartup file, which resides in your remote folder.\par 
\par 
{\b About the Audio.make makefile}\par 
\par 
To compile all of the audio examples, you can use the Audio.make file.  Copy the Examples:Audio folder to your hard drive.  Then, start MPW and use the {\b Set Directory...}
 command to set the current directory to the new Examples:Audio folder.  Finally, use the {\b Build...} command with {\f22 Audio} as the makefile name.  The makefile will play a tune when the make is completed.\par 
\par 
{\b Talking to us}\par 
\par 
We\rquote re always interested in improving our examples.  If you have specific comments or questions about these example programs, a good way to contact us is via 3DO\rquote s InfoServer BBS.\par 
\par 
\pard\plain \s2 \b\f16\fs28\ul Examples:Audio\par 
\pard\plain \f16 \par 
\pard\plain \s3\li360 \b\f16\fs28 beep\par 
\pard\plain \f16 \par 
\pard\plain \s4\li720 \f16 Play synthetic waveform for 2 seconds. This demonstrates loading, connecting and playing instruments. It also demonstrates use of the audio timer for time delays.\par 
\pard\plain \f16 \par 
\pard\plain \s3\li360 \b\f16\fs28 capture_audio [<num frames> [<dest file>]]\par 
\pard\plain \f16 \par 
\pard\plain \s4\li720 \f16 This program captures the output from the DSP into a file on the development station's filesystem. It can be used to check the sound output of your program at important points.\par 
\pard\plain \f16 \par 
\pard\plain \s3\li360 \b\f16\fs28 minmax_audio\par 
\pard\plain \f16 \par 
\pard\plain \s4\li720 \f16 This program samples the output of the DSP and returns the maximum and minimum output values of the DSP. You can use minmax_audio to check that your program outputs reasonable, non-clipping levels of audio.\par 
\par 
\pard\plain \s3\li360 \b\f16\fs28 playmf <MIDI file> <PIMap file> [<num repeats>]\par 
\pard\plain \f16 \par 
\pard\plain \s4\li720 \f16 This sample application load
s a standard MIDI format file, loads instruments and AIFF samples described in a PIMap file, and plays the MIDI file the specified number of times. It demonstrates usage of the Juggler and the score playing routines.\par 
\pard\plain \f16 \par 
\pard\plain \s3\li360 \b\f16\fs28 playsample [<sample file> [<rate>]]\par 
\pard\plain \f16 \par 
\pard\plain \s4\li720 \f16 This program shows how to load an AIFF sample file and play it using the control pad. Use the A button to start the sample, the B button to release the sample, and the C button to stop the sample. The X button quits the program.
\par 
\pard\plain \s3\li360 \b\f16\fs28 \par 
playsoundfile <sample file>...\par 
\pard\plain \f16 \par 
\pard\plain \s4\li720 \f16 Calls SoundFilePlayer routines to play one or more AIFF files.\par 
\pard\plain \f16 \par 
\pard\plain \s3\li360 \b\f16\fs28 simple_envelope\par 
\pard\plain \f16 \par 
\pard\plain \s4\li720 \f16 Simple demonstration of an envelope used to ramp amplitude of a sawtooth waveform. A 3-point envelope is used to
 provide a ramp up to a specified amplitude at the start of the sound and a ramp down when the sound is to be stopped. This is one technique to avoid audio pops at the start and end of sounds.\par 
\pard\plain \f16 \par 
\pard\plain \s3\li360 \b\f16\fs28 spoolsoundfile <sound file> [<num repeats>]\par 
\pard\plain \f16 \par 
\pard\plain \s4\li720 \f16 Plays an AIFF sound file using a thread to manage playback.\par 
\pard\plain \f16 \par 
\pard\plain \s3\li360 \b\f16\fs28 ta_attach\par 
\pard\plain \f16 \par 
\pard\plain \s4\li720 \f16 Creates a pair of software-generated samples and attaches them to a sample player instrument. The attachments are then linked to one another using LinkAttachment() such that they play in a loop.\par 
\pard\plain \f16 \par 
\pard\plain \s3\li360 \b\f16\fs28 ta_customdelay [<sample file> [<delay ticks>]]\par 
\pard\plain \f16 \par 
\pard\plain \s4\li720 \f16 
This program demonstrates how to create and use a delay line to get real-time echo effects in your program.  It loads the specified AIFF file and plays it into a delay line. By tweaking the knobs on the output mixer, you can control the mix of delay sound 
versus original sound, and the speed at which the echo will die down.\par 
\pard\plain \f16 \par 
\pard\plain \s3\li360 \b\f16\fs28 ta_envelope [<test code>]\par 
\pard\plain \f16 \par 
\pard\plain \s4\li720 \f16 Demonstrates creating, attaching, and modifying two envelopes which are attached to sawtooth instruments.\par 
\pard\plain \f16 \par 
\pard\plain \s3\li360 \b\f16\fs28 ta_pitchnotes [<sample file> [<duration>]]\par 
\par 
\pard\plain \s4\li720 \f16 This program loads and plays the AIFF sample file at several different pitches. It does this by selecting a MIDI note number, which the audio folio maps to a frequency.\par 
\pard\plain \f16 \par 
\pard\plain \s3\li360 \b\f16\fs28 ta_spool\par 
\pard\plain \f16 \par 
\pard\plain \s4\li720 \f16 
Uses the music.lib sound spooler to fill buffers, parse information in the buffers, signal our task when a buffer has been exhausted, and refill the buffers.  Use this sample code as a basis for developing your own routines for playing large sampled files,
 or handling other kinds of buffered data.\par 
\pard\plain \f16 \par 
\pard\plain \s3\li360 \b\f16\fs28 ta_sweeps\par 
\pard\plain \f16 \par 
\pard\plain \s4\li720 \f16 This program quickly modulates the amplitude and frequency of a sawtooth instrument via tweaking the control knobs repeatedly.\par 
\pard\plain \f16 \par 
\pard\plain \s3\li360 \b\f16\fs28 ta_timer\par 
\pard\plain \f16 \par 
\pard\plain \s4\li720 \f16 This program shows how to examine and change the rate of the audio clock.  It demonstrates use of cues to signal your task at a specific time. It also demonstrates how the audio folio deals with bad audio rate values.\par 
\pard\plain \f16 \par 
\pard\plain \s3\li360 \b\f16\fs28 ta_tuning\par 
\pard\plain \f16 \par 
\pard\plain \s4\li720 \f16 This program demonstrates how to create a tuning table, how to create a tuning, and how to apply a tuning to an instrument.\par 
\pard\plain \f16 \par 
\pard\plain \s3\li360 \b\f16\fs28 ta_tweakknobs <dsp instrument>\par 
\pard\plain \f16 \par 
\pard\plain \s4\li720 \f16 
This program finds the names of all knobs on an instrument and tweaks them to NUMSTEPS * (number of knobs) possible permutations. This program demonstrates how to find and tweak knobs on an instrument, and is useful for testing instrument templates.\par 
\pard\plain \f16 \par 
\pard\plain \s3\li360 \b\f16\fs28 tsc_soundfx\par 
\pard\plain \f16 \par 
\pard\plain \s4\li720 \f16 Demonstrate use of ScoreContext as a simple sound effects manager. This gives you dynamic voice allocation, and a simple MIDI-like interface.\par 
\pard\plain \f16 \par 
\pard\plain \s2 \b\f16\fs28\ul Examples:Audio:Advanced_Sound_Player\par 
\pard\plain \f16 \par 
\pard\plain \s3\li360 \b\f16\fs28 tsp_algorithmic\par 
\pard\plain \f16 \par 
\pard\plain \s4\li720 \f16 
Given a long sound file with several markers defined therein, this program demonstrates interactive AIFF sound branching.  The technique used to implement this sequence involves the use of static branches, where one segment always leads in
to another, (e.g. after playing the 1st ending always goes back to the loop segment), and decision functions where a conditional branching is required (e.g. the end of the loop segment either goes to the 1st or 2nd ending).\par 
\pard\plain \s3\li360 \b\f16\fs28 \par 
tsp_rooms\par 
\pard\plain \f16 \par 
\pard\plain \s4\li720 \f16 
Creates a thread to playback a sound track based on a global room variable gRoom.  The soundtrack thread, Soundtrack, uses the advanced sound player to play a unique sound file for each room. When the main task changes rooms, the soundtrack thread adapts t
he soundtrack to the change in room at a musically convenient location.\par 
\par 
\pard\plain \s3\li360 \b\f16\fs28 tsp_spoolsoundfile <sound file> [<num repeats>]\par 
\pard\plain \f16 \par 
\pard\plain \s4\li720 \f16 Plays an AIFF sound file using a thread to manage playback.\par 
\pard\plain \f16 \par 
\pard\plain \s3\li360 \b\f16\fs28 tsp_switcher\par 
\pard\plain \f16 \par 
\pard\plain \s4\li720 \f16 Loops one of three sound files off of disc. The user can select a different sound to loop by pressing the A, B, or C buttons on the control pad. The last button pressed corresponds to the sound being played.\par 
\pard\plain \f16 \par 
\pard\plain \s2 \b\f16\fs28\ul Examples:Audio:Coal_River\par 
\pard\plain \f16 \par 
\pard\plain \s3\li360 \b\f16\fs28 CoalRiver\par 
\pard\plain \f16 \par 
\pard\plain \s4\li720 \f16 This program plays a MIDI file using Juggler and Score toolbox\par 
from the music.lib and audio folio, and demonstrates special MIDI\par 
interpreter functions.\par 
\par 
The CoalRiver.pimap file refers to some AIFF samples which were included in the "AIFF Samples" folder.  It is necessary to copy the "AIFF Samples" folder into the remote folder to use them in this program.\par 
\par 
\pard\plain \s2 \b\f16\fs28\ul Examples:Audio:DrumBox\par 
\pard\plain \s3\li360 \b\f16\fs28 \par 
drumbox <PIMap>\par 
\pard\plain \f16 \par 
\pard\plain \s4\li720 \f16 This program loads and plays up to eight rhythm sounds in a repeating measure of sixteen beats. Use the D-pad and the A button to place or remove a sound from a specific point in the rhythm.\par 
\par 
{\b <PIMap>} is the path and filename of a PIMap file to use. A standard "drumbox.pimap" is provided, so try using drumbox.pimap as the argument to drumbox.\par 
\par 
\pard\plain \s2 \b\f16\fs28\ul Examples:Audio:Juggler\par 
\pard\plain \s4\li720 \f16 \par 
\pard\plain \s3\li360 \b\f16\fs28 tj_canon <PIMap>\par 
\pard\plain \f16 \par 
\pard\plain \s4\li720 \f16 This program shows how to create and play a simple canon using the juggler and score-playing routines.\par 
\pard\plain \f16 \par 
\pard\plain \s3\li360 \b\f16\fs28 tj_multi\par 
\pard\plain \f16 \par 
\pard\plain \s4\li720 \f16 This program tests the juggler using non-musical events and software-based "timing."  It constructs two synthetic sequences and creates a collection based on these two sequences. It then
 "plays" the collection via a simple print function, processed at the time of each event in each sequence.\par 
\pard\plain \f16 \par 
\pard\plain \s3\li360 \b\f16\fs28 tj_simple\par 
\pard\plain \f16 \par 
\pard\plain \s4\li720 \f16 This program tests the juggler using non-musical events and software-based "timing."  It constructs two synthetic sequences and "plays" the sequences via a simple print function, processed at the time of each event in each
 sequence.\par 
\pard\plain \s2 \b\f16\fs28\ul \par 
Examples:Audio:PatchDemo\par 
\par 
\pard\plain \s4\li720 \f16 This directory contains sample text files which can be provided as input to the patchdemo command.  The patchdemo command allows you to experiment with DSP instruments by creating patch files which describe 
how to attach them to one another.  The input file format to patchdemo are documented in the {\b 3DO Tools for Sound Design} manual.\par 
\par 
Beginning with the Portfolio 2.5 release, the patchdemo command can be accessed via the following command in the 3DO Debugger:\par 
\par 
{\f22 $c/patchdemo <patch file>}\par 
\par 
To use these patches, it is necessary to copy the "AIFF Samples" folder into the remote folder.\par 
\par 
\pard\plain \s2 \b\f16\fs28\ul Examples:Audio:Songs:\par 
\par 
\pard\plain \s4\li720 \f16 This directory contains five sets of .PIMap and .MF (MIDI format) files which can be provided as input to the playmf command.  To hear these songs, use the following command in the 3DO Debugger:\par 
\par 
{\f22 $c/}{\f22 playmf <MIDI file> <PIMap file> [<num repeats>]}\par 
\par 
To hear these songs, it is necessary to copy the "AIFF Samples" folder into the remote folder.\par 
\pard \s4\li720 \par 
}