###########################################################################   File:       BuildDS##	Contains:	Script to build all of the data stream components:#						ds.lib				data streamer#						dataacq.lib			data acquisition#						subscriber.lib		subscriber library##	Usage:		BuildDS { clean | "" } { root folder | "" }##					"clean"		deletes all object files before#								building everything##	Copyright © 1992 The 3DO Company## 	All rights reserved. This material constitutes confidential and proprietary #	information of the 3DO Company and shall not be used by any Person or for any #	purpose except as expressly authorized in writing by the 3DO Company.##	History:#	11/9/93		jb		Split build of test programs into separate make file#						keeping just the commands to build the basic libraries.#	10/26/93	jb		Add build commands for PlaySA; modify#						build commands for sample applications to be boilerplate#						set of commands that depends on the shell variable#						"{SampleApp}" for easier maintenence.#	10/19/93	jb		Add build commands for TestSA and PlaySAnim test programs#	7/9/93		jb		Save and restore the state of {Exit} around the #						deletion of files if "clean" option selected.#	6/27/93		jb		Allow command line specification of root directory#						Add "clean" option to specify deletion of ALL#						object files prior to building.#	6/24/93		jb		New today.############################################################################	Determine the datastream root folder name. May be specified as#	arg 2 on the command line, or will be prompted for if omitted.#if "{2}" == ""	set DSFolder "`getfilename -q -d -m "Select release directory"`"else	set DSFolder "{2}"end##	Delete all object files for a "clean" build completely from source#If "{1}" == "clean"	Begin		# Save state of {Exit}		set saveExit {Exit}		set Exit 0		# Delete all subscriber object files		delete -i "{DSFolder}"DataStream:Subscribers:subscriber.lib		delete -i "{DSFolder}"DataStream:Subscribers:Objects:Å		# Delete all datastream and dataacq object files		delete -i "{DSFolder}"DataStream:dataacq.lib		delete -i "{DSFolder}"DataStream:ds.lib		delete -i "{DSFolder}"DataStream:Objects:Å		# Restore the state of {Exit}		set Exit {saveExit}	End ·· Dev:NullEnd## Build the library of subscribers#	echo "Building subscriber.lib ..."	directory "{DSFolder}"DataStream:Subscribers:	make -e -f subscriber.lib.make subscriber.lib > subscriber.lib.makeout	subscriber.lib.makeout	delete -i subscriber.lib.makeout	make -e -f subscriberShuttle.lib.make subscriberShuttle.lib > subscriberShuttle.lib.makeout	subscriberShuttle.lib.makeout	delete -i subscriberShuttle.lib.makeout## Build data acquisition and the data streamer#	echo "Building ds.lib and dataacq.lib ..."	directory ::	make -e -f dataacq.lib.make dataacq.lib > dataacq.lib.makeout	dataacq.lib.makeout	delete -i dataacq.lib.makeout		make -e -f ds.lib.make ds.lib > ds.lib.makeout	ds.lib.makeout	delete -i ds.lib.makeout	make -e -f dataacqShuttle.lib.make dataacqShuttle.lib > dataacqShuttle.lib.makeout	dataacqShuttle.lib.makeout	delete -i dataacqShuttle.lib.makeout		make -e -f dsShuttle.lib.make dsShuttle.lib > dsShuttle.lib.makeout	dsShuttle.lib.makeout	delete -i dsShuttle.lib.makeout## Say we're finished#	echo "BuildDS finished."	Beep