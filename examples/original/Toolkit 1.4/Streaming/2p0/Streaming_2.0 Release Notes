===========================================================================
=== 					 Streaming 2.0 Release Notes					===
=== 						 June 14, 1994	     						===
===========================================================================

=====================
===	 Release 2.0  ===
=====================


This release introduces the ability to branch within streams based upon
a stream time relative to the current stream time.  This mechanism does not 
need a marker table to be woven into the stream, thus reducing stream size.
The example ShuttlePlayer demonstrates fast forward, fast reverse, and step
forward using this relative stream time branching mechanism.

The weaver is updated to weave at least 100 input files.  Two new commands
have been added to write GOTO and STOP control chunks to the streamed output.

The document 'Streaming Tools Notes' was added to the StreamTools folder.
Every effort was made to provide documentation on the usage of the
stream tools.

Note:  	If you use the installer, the Apps & Data in the Streaming examples 
 		would not be automatically installed due to its size..  You can 
		drag/drop the Apps & Data in Streaming from the 3DOToolkit 1.4.

============================
=== Example code changes ===
============================

¥	A new example, ShuttlePlayer, demonstrates fast forward, fast reverse,
	and step forward using the relative stream time branching mechanism.  

¥	The 'Examples' folders have been reorganized to include the application,
	data, and the DS_Examples_README file. This simplifies the use of Data
	Streaming examples.

¥	A DS_Examples_README file has been added to 'Examples' in the main
	data stream folder.  The DS_Examples_README file covers how to run
	the data streaming examples and how to create streamed output.

¥	A new folder called 'Tools and Data' has been added to 'Examples' in
	the main data stream folder. This folder contains scripts and data for
	producing streamed output for the examples.

¥	A new folder called 'Apps & Data' has been added to each example folder. 
	'Apps & Data' contains the example application and the data to run
	the example.


========================
=== Streamer changes ===
========================

¥  	The compile option RELATIVE_BRANCHING has been added to the make files
	of the libraries to switch between the relative versus absolute time
	branching mechanism.  For developers' convenience, the libraries
	DataAcqShuttle.lib, DSShuttle.lib, and SubscriberShuttle.lib were built
	with the compile option RELATIVE_BRANCHING turned on.  The vanilla
	libraries, DataAcq.lib, DS.lib, and Subscriber.lib have the compile
	option RELATIVE_BRANCHING turned off.

================================
=== Data Acquisition changes ===
================================

¥	DataAcq.c now supports relative time based branching. A number of new
	'options'values for use with DSGoMarker() have been added. These are:


	Option						Meaning of DSGoMarker() value
	------						-----------------------------
	GOMARKER_NUMBER				absolute marker number
	GOMARKER_FWD_POS_RELATIVE	the number of blocks to skip forward relative to 
								our current position
	GOMARKER_BWD_POS_RELATIVE	the number of blocks to skip backward relative to
								our current position
	
	Added in the last release, but not yet supported, is a symbol for an option
	to specify branching to named locations in a stream: GOMARKER_NAMED.
	
	MovieToStream_Shuttle outputs streams with keyframe and diff frame subchunk
	types and chunkFlags in the chunk header struct.  This gives info on the
	number of blocks to the next or prior keyframe relative to the current
	position.

==========================
=== Subscriber changes ===
==========================

¥	Substantial changes were made to the Cinepak subscriber to support
	relative time branching mechanism and step forward mechanism.
	These changes are in CPakSubscriberS.c and will be folded into
	cpaksubscriber.c in future release.
	
¥	The audio subscriber provides trace codes to allow trace dumps
	using an IN CONTROL format as a template.
	
¥	Some audio subscriber procedures were made unique to avoid
	clashing with other subscribers such as scel subscriber with
	the same procedure name.  


===========================
=== Stream Tool Changes ===
===========================

¥	The following MPW environment was used to build Stream Tools:

		MPW Shell Version 3.3.1
		MPW C Compiler Version 3.3.2
		MPW Linker Version 3.3.2
		
¥	Streaming Tools Notes

	A docuement called 'Streaming Tools Notes' was added to StreamTools
	folder in the main data stream folder.  This docuement provides up to
	date documentation on the usage of Stream Tools. 

¥	Weaver_2.2

	The Weaver has been updated to allow quoted filenames in the weaver
	script to allow input filenames with spaces and special characters.
	
	Two new commands have been added to write GOTO and STOP control chunks
	to the streamed output:
			writegotochunk <streamTime> <destinationTime>
			writestopchunk <streamTime>
	where streamTime specifies the time where the control chunk is to be
	placed and the destinationTime specifies the absolute time to goto.
	These commands produce the same output as CtrlMaker. Previously, in
	order to write either a GOTO or a STOP chunk to a streamed output,
	it was necessary to run CtrlMaker first to produce the control chunk, 
	before running Weaver.
	
	The compile option USE_MAC_IO, has been added to allow switching 
	between Macintoch I/O calls and Standard I/O calls. The limit on the
	number of input files is set to 20 if Standard I/O is used (the
	guaranteed minimum number of files that can be opened simultaneously
	is set to 12 in stdio.h) whereas the limit is much higher if
	Mac I/O is used (at least 100 files). If you don't have
	to weave more than 15 files, portability will be maintained by
	setting USE_MAC_IO to 0.
	
¥	MovieToStream_1.8

	Two new options have been added to allow the user to specified the
	output filename instead of the default and to allow the user to
	specify the channel number:
		-o <output filename>
		-c <channel>
	If there are more than one movie file to stream and the -o option is
	used, a number will be appended to the output filename. For example:
	
		MovieToStream -c 12 -o my.out file1.Moov file2.Moov
	
	would produce two streamed output called my.out1 and my.out2 using
	the user specified channel number 12.
	
	Made the usage message more readible by printing one option per line.
	
	LIMITATION:  You cannot convert movies with PAL dimensions (384X288)
	with MovieToStream.
	
¥	MovieToStream_Shuttle1.8
	This version of MovieToStream added key frame and diff frame subchunk
	types and chunkFlags to the chunk header struct to allow flexibility to
	have other chunk types be "key".  This version was created to be used
	with ShuttlePlayer.  Also, -s option (which is necessary when conjoining
	numerous clips) was added to allow the user to set the start time for
	marker offsets.  This version will be folded into MovieToStream in
	future release.

	LIMITATION:  You cannot convert movies with PAL dimensions (384X288)
	with MovieToStreamShuttle.
	
¥	AnimToSanm

	Fixed code so that the usage is printed if no arguement was specified.

¥	Chunkify
	CtlMaker
	DumpStreamCCBs
	SAudioTool
	SFToStream

 	Minor changes have been made to the definition of SUBS_COMMON_CHUNK
	to require semicolon when used in context.  This modification is done
	to improve readibility and does not effect features of these tools.
	

==================
=== Known Bugs ===
==================


¥	Streaming bugs from Streaming 1.9a8:

	#2166	- ** Priority - InitializeThread in DataAcq sets thread item to 0
	in context block.  Most of the time, this isn't a problem, but on occassions
	such as the following it is.  If DisposeDataAcq gets called before the
	thread has exited, it attempts to kill the thread, however, since thread
	item is set to 0, it presumes the thread is dead and cannot kill the
	thread since it doesn't have the thread number.

	#1622	- (dup 2076) - The _DeleteSubscriber routine in DataStream.c does
	not correctly delete subscribers.
	
	#1912	- The NewThread () in ThreadHelper.c may return 0 if 1)  after an
	unsuccesful call to NewPtr, or 2) after a sucessful call to CreateItem.
	
	#2083	- DisposeDataAcq() in DataAcq.c only deletes threads with positive
	item numbers.
	
	#2181	- CreateItemPool() in ItemPool.c does not check if allocation of
	block of item descriptors was successful or not.
	
	#2183	- CreateItemPool() in ItemPool.c quits allocating items if an item
	equal to zero is returned.
	
	¥  Streaming presently does not conform to the error return numbering system
	of standard 3DO systems and libraries.  This will be fixed in future releases.
	

¥	Streaming Tools Bugs:

	Bug# 2077 (SFToStream) - Error in SFToStream when calculating how many
	samples fit into a single SNDS chunk to make its duration a whole
	number of audio ticks.
	
	Bug# 2165 (SFToStream) - Roundig error in SFToStream which accumulate
	over time so that the stream time wanders off from the real time of the
	original audio.
	
	
Future compatibility with QuickTime 2.0

	¥  	Streaming 2.0 has been tested with QuickTime 1.6.2 and has not been
		tested with Beta Release of QuickTime 2.0. Any compatibility
		problems between Streaming 2.0 and QuickTime 2.0 will be addressed 
		when the final version of QuickTime 2.0 becomes available.