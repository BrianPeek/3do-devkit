<HTML><HEAD><TITLE>The map Data Abstraction</TITLE></HEAD>
<BODY>
<A HREF="ug.htm"><IMG SRC="images/banner.gif"></A>
<P><STRONG>Click on the banner to return to the user guide home page.</STRONG></P>
<P>&copy;Copyright 1996 Rogue Wave Software</P>
<H2>The map Data Abstraction</H2>
<A HREF="sidebar.htm#sidebar29"><IMG SRC="images/note.gif" BORDER=0> <STRONG>Other Names for Maps</STRONG></A>

<P>A <A HREF="../stdref/map_8018.htm"><B><I>map</I></B></A> is an indexed data structure, similar to a <A HREF="../stdref/vec_0251.htm"><B><I>vector</I></B></A> or a <A HREF="../stdref/deq_4164.htm"><B><I>deque</I></B></A>.  However, maps differ from vectors or deques in two important respects.  First, in a map, unlike a vector or deque, the index values (called the<I> key values</I>) need not be integer, but can be any ordered data type.  For example, maps can be indexed by real numbers, or by strings. Any data type for which a comparison operator can be defined can be used as a key. As with a <B><I>vector</I></B> or <B><I>deque</I></B>, elements can be accessed through the use of the subscript operator (although there are other techniques).  The second important difference is that a map is an ordered data structure.  This means that elements are maintained in sequence, the ordering being determined by key values.  Because they maintain values in order, maps can very rapidly find the element specified by any given key (searching is performed in logarithmic time).  Like a <A HREF="../stdref/lis_3222.htm"><B><I>list</I></B></A>, maps are not limited in size, but expand or contract as necessary as new elements are added or removed.  In large part, a <B><I>map</I></B> can simply be considered to be a <A HREF="../stdref/set_1649.htm"><B><I>set</I></B></A> that maintains a collection of pairs.</P>
<P>There are two varieties of maps provided by the standard library.  The <A HREF="../stdref/map_8018.htm"><B><I>map</I></B></A> data structure demands unique keys.  That is, there is a one-to-one association between key elements and their corresponding value.  In a map, the insertion of a new value that uses an existing key is ignored.  A <A HREF="../stdref/mul_8396.htm"><B><I>multimap</I></B></A>, on the other hand, permits multiple different entries to be indexed by the same key.  Both data structures provide relatively fast (logarithmic time) insertion, deletion, and access operations.</P>
<A HREF="sidebar.htm#sidebar30"><IMG SRC="images/note.gif" BORDER=0> <STRONG>Pairs</STRONG></A>

<A NAME="includefiles"><H3>Include files</H3></A>
<P>Whenever you use a <A HREF="../stdref/map_8018.htm"><B><I>map</I></B></A> or a <A HREF="../stdref/mul_8396.htm"><B><I>multimap</I></B></A>, you must include the <SAMP>map</SAMP> header file.</P>
<PRE>   # include &#60;map>
</PRE>

<HR>
<A HREF="map_7716.htm"><IMG SRC="images/prev.gif"></A> <A HREF="booktoc.htm"><IMG SRC="images/toc.gif"></A> <A HREF="map_8354.htm"><IMG SRC="images/next.gif"></A></BODY></HTML>
