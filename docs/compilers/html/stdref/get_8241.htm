<HTML><TITLE>get_temporary_buffer</TITLE><BODY>
<A HREF="ref.htm"><IMG SRC="images/banner.gif"></A>
<P><STRONG>Click on the banner to return to the Class Reference home page.</STRONG></P>
<P>&copy;Copyright 1996 Rogue Wave Software</P>
<H2>get_temporary_buffer</H2>
<HR><PRE>     Memory Handling Primitive</PRE><HR>
<A NAME="Summary"><H3>Summary</H3></A>
<P>Pointer based primitive for handling memory</P>
<H3>Contents</H3>
<UL>
<A HREF="#Synopsis"><LI>Synopsis</LI></A>
<A HREF="#Description"><LI>Description</LI></A>
<A HREF="#See Also"><LI>See Also</LI></A>
</UL>
<A NAME="Synopsis"><H3>Synopsis</H3></A>
<PRE>#include &#60;memory></PRE>
<PRE>
template &#60;class T>
pair&#60;T*, ptrdiff_t> <B>get_temporary_buffer</B> (ptrdiff_t, T*);
</PRE>
<A NAME="Description"><H3>Description</H3></A>
<P>The <B><I>get_temporary_buffer</B></I> templated function reserves from system memory the largest possible buffer that is less than or equal to the size requested (<SAMP>n*sizeof(T)</SAMP>), and returns a <SAMP>pair&#60;T*, ptrdiff_t></SAMP> containing the address and size of that buffer.  The units used to describe the capacity are in <SAMP>sizeof(T)</SAMP>.</P>
<A NAME="See Also"><H3>See Also</H3></A>
<P><A HREF="all_7029.htm"><B><I>allocator</B></I></A>, <A HREF="pai_5818.htm"><B><I>pair</B></I></A>, <A HREF="ret_6218.htm"><B><I>return_temporary_buffer</B></I></A>.</P>
<HR>
<A HREF="gen_0186.htm"><IMG SRC="images/prev.gif"></A> <A HREF="ref.htm#contents"><IMG SRC="images/toc.gif"></A> <A HREF="gre_0376.htm"><IMG SRC="images/next.gif"></A></BODY></HTML>
